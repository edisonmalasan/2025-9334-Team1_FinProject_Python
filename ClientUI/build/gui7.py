
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from tkinter import font
from utils.FontLoader import FontLoader

from tkinter import Canvas

class WinnerContainer:
    def __init__(self, canvas: Canvas, assets):
        self.canvas = canvas
        self.elements = {}
        self.assets = image_assets
        
        # Container dimensions (x1, y1, x2, y2)
        self.x1, self.y1 = 350.0, 30.0
        self.width, self.height = 250.0, 370.0
        
        self._create_container()
        self._add_elements()
    
    def _create_container(self):
        """Create the container background/border"""
        self.elements['bg'] = self.canvas.create_rectangle(
            self.x1, self.y1,
            self.x1 + self.width, self.y1 + self.height,
            fill="#232323",
            outline="#FFAB24",
            width=2
        )
    
    def _add_elements(self):
        """Add all elements to the container"""
        center_x = self.x1 + self.width / 2

        # Main winner text (positioned above container)
        self.elements['winner_text'] = self.canvas.create_text(
            center_x, self.y1 - 10,
            anchor="n",
            text="WINNER!",
            fill="#FFFFFF",
            font=("Silkscreen Regular", 40)
        )
        
        # Profile image
        self.elements['profile_image'] = self.canvas.create_image(
            center_x, self.y1 + 100
        )
        
        # Username
        self.elements['username'] = self.canvas.create_text(
            center_x, self.y1 + 170,
            anchor="n",
            text="username",
            fill="#FFAB24",
            font=("Montserrat Bold", 20)
        )
        
        # Points
        self.elements['points'] = self.canvas.create_text(
            center_x, self.y1 + 200,
            anchor="n",
            text="0 points",
            fill="#FFAB24",
            font=("Silkscreen Regular", 15)
        )
        
        # Words guessed label
        self.elements['words_label'] = self.canvas.create_text(
            center_x, self.y1 + 270,
            anchor="n",
            text="WORDS GUESSED:",
            fill="#F8EFE0",
            font=("Silkscreen Regular", 15)
        )
        
        # Words guessed placeholder
        self.elements['words_placeholder'] = self.canvas.create_text(
            center_x, self.y1 + 300,
            anchor="n",
            text="_______",
            fill="#FFFFFF",
            font=("Silkscreen Regular", 15),
            width=10
        )
        
        # Underline
        underline_width = 150
        self.elements['underline'] = self.canvas.create_rectangle(
            center_x - underline_width / 2, self.y1 + 295,
            center_x + underline_width / 2, self.y1 + 296,
            fill="#FFFFFF",
            outline=""
        )
        
        # Tag all elements for group operations
        for item in self.elements.values():
            self.canvas.itemconfig(item, tags=("winner_container",))
    
    def move(self, dx: float, dy: float):
        """Move entire container by dx, dy pixels"""
        self.canvas.move("winner_container", dx, dy)
        self.x1 += dx
        self.y1 += dy
    
    def update_username(self, new_name: str):
        """Update username text"""
        self.canvas.itemconfig(self.elements['username'], text=new_name)
    
    def update_points(self, points: int):
        """Update points display"""
        self.canvas.itemconfig(self.elements['points'], text=f"{points} points")
    
    def update_words_guessed(self, words: str):
        "Update Words Guessed List"
        self.canvas.itemconfig(self.elements['words_placeholder'], text=words)
    
    def hide(self):
        """Hide the entire container"""
        self.canvas.itemconfig("winner_container", state="hidden")
    
    def show(self):
        """Show the entire container"""
        self.canvas.itemconfig("winner_container", state="normal")
    
    def set_position(self, x: float, y: float):
        """Move container to absolute position"""
        dx = x - self.x1
        dy = y - self.y1
        self.move(dx, dy)
    
    def set_position_center(self, canvas_width:float, canvas_height:float):
        "Move container to center"
        dx = (canvas_width - self.width) / 2
        dy = (canvas_height - self.height) / 2
        self.set_position(dx,dy)


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\paulp\VSCODE_REPO\2025-9334-team1_finproject_python\UI_TKFORGE\build\assets\frame7")
font_loader = FontLoader(Path(r"C:\Users\paulp\VSCODE_REPO\2025-9334-team1_finproject_python\UI_TKFORGE\build\assets\fonts"))

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("985x589")
window.configure(bg = "#FFFFFF")

font_loader.load_tk_font("silkscreen", "Silkscreen", 24)
font_loader.load_tk_font("montserrat", "Montserrat", 18, weight="bold")

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 589,
    width = 985,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    500.0,
    300.0,
    image=image_image_1
)

#background image
image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(500.0, 300.0, image=image_image_1)

image_assets = {
    'image_2': PhotoImage(file=relative_to_assets("image_2.png")),
    'image_3': PhotoImage(file=relative_to_assets("image_3.png")),
    'button_1': PhotoImage(file=relative_to_assets("button_1.png"))
}

#back to main menu button
button_1 = Button(
    image=image_assets['button_1'],
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(x=445.0, y=536.999)

winner_container = WinnerContainer(canvas, image_assets)
guessed_words = ["apple", "banana", "pear"]

# Example manipulations:
winner_container.move(10, 20)  # Relative movement
winner_container.set_position_center(985, 589) # Absolute position
winner_container.update_username("player123")
winner_container.update_points(1500)
winner_container.update_words_guessed(guessed_words)

window.resizable(False, False)
window.mainloop()